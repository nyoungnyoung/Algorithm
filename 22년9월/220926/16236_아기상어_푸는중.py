# N * N 크기 공간 / 물고기 M마리 / 아기상어 1마리 -> 한 칸에 물고기 최대 1마리
# 아기상어의 최초 크기 2 / 1초에 상하좌우로 인접한 한칸씩 이동
# 아기상어는 자기 크기보다 큰 물고기 있는 칸은 지나갈 수 X
# 자기보다 작은 물고기만 먹을 수 있다
# 더 이상 먹을 수 있는 물고기가 공간에 없을 때 엄마 상어에게 도움 요청
# 먹을 수 있는 물고기가 1마리면 그 물고기 먹으러 감
# 먹을 수 있는 물고기가 많으면 거리가 가장 가까운 물고기를 먹으러 감
# 거리가 가까운 물고기가 여러마리면 가장 위에 있는 물고기,
# 이런 물고기도 여러마리면 가장 왼쪽에 있는 물고기를 먹는다.
# 이동과 동시에 물고기를 먹고, 아기상어가 자신의 크기와 같은 수의
# 물고기를 먹을 때 마다 크기 1 증가


import sys

def bfs(start, data):
    pass

N = int(sys.stdin.readline())
arr = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]
# 아기 상어 위치
for i in range(N):
    for j in range(N):
        if arr[i][j] == 9:
            arr[i][j] == 0
            x, y = i, j
